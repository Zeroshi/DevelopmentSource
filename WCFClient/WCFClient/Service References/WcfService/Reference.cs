//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFClient.WcfService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/WCFMessage")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdentityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageBodyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DT {
            get {
                return this.DTField;
            }
            set {
                if ((this.DTField.Equals(value) != true)) {
                    this.DTField = value;
                    this.RaisePropertyChanged("DT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Identity {
            get {
                return this.IdentityField;
            }
            set {
                if ((this.IdentityField.Equals(value) != true)) {
                    this.IdentityField = value;
                    this.RaisePropertyChanged("Identity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageBody {
            get {
                return this.MessageBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageBodyField, value) != true)) {
                    this.MessageBodyField = value;
                    this.RaisePropertyChanged("MessageBody");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfService.IWcfService")]
    public interface IWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/GetData", ReplyAction="http://tempuri.org/IWcfService/GetDataResponse")]
        WCFClient.WcfService.Message GetData(WCFClient.WcfService.Message value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/GetData", ReplyAction="http://tempuri.org/IWcfService/GetDataResponse")]
        System.Threading.Tasks.Task<WCFClient.WcfService.Message> GetDataAsync(WCFClient.WcfService.Message value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/GetPing", ReplyAction="http://tempuri.org/IWcfService/GetPingResponse")]
        WCFClient.WcfService.Message GetPing(WCFClient.WcfService.Message value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/GetPing", ReplyAction="http://tempuri.org/IWcfService/GetPingResponse")]
        System.Threading.Tasks.Task<WCFClient.WcfService.Message> GetPingAsync(WCFClient.WcfService.Message value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfServiceChannel : WCFClient.WcfService.IWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfServiceClient : System.ServiceModel.ClientBase<WCFClient.WcfService.IWcfService>, WCFClient.WcfService.IWcfService {
        
        public WcfServiceClient() {
        }
        
        public WcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFClient.WcfService.Message GetData(WCFClient.WcfService.Message value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<WCFClient.WcfService.Message> GetDataAsync(WCFClient.WcfService.Message value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WCFClient.WcfService.Message GetPing(WCFClient.WcfService.Message value) {
            return base.Channel.GetPing(value);
        }
        
        public System.Threading.Tasks.Task<WCFClient.WcfService.Message> GetPingAsync(WCFClient.WcfService.Message value) {
            return base.Channel.GetPingAsync(value);
        }
    }
}
